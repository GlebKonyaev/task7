import os
import sys

project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", ".."))
if project_root not in sys.path:
    sys.path.insert(0, project_root)

import argparse

from example_package_gleb_koniaev.monaco.data_handler import RaceDataHandler
from example_package_gleb_koniaev.monaco.report_builder import ReportBuilder


class ArgParser:
    """Command line argument parser"""

    def __init__(self):
        self.parser = argparse.ArgumentParser(description="Monaco 2018 Racing Report")
        self._setup_arguments()

    def _setup_arguments(self):
        """Configures command line arguments"""
        self.parser.add_argument("--files", required=True, help="Path to data folder")
        self.parser.add_argument("--driver", help="Driver name to search")
        group = self.parser.add_mutually_exclusive_group()
        group.add_argument("--asc", action="store_true", help="Ascending order")
        group.add_argument("--desc", action="store_true", help="Descending order")

    def parse_args(self):
        """
        Parses command line arguments

        Returns:
            Namespace: Object with parsing arguments
        """
        return self.parser.parse_args()


def main():
    """The basic function for launching an application"""
    arg_parser = ArgParser()
    args = arg_parser.parse_args()
    try:
        data_handler = RaceDataHandler(args.files)
    except FileNotFoundError as eror:
        print(f"error - {eror}")
        return [],[]
    report_builder = ReportBuilder(data_handler)
    report, errors = report_builder.build_report(reverse=args.desc)
    return report or [], errors or []


if __name__ == "__main__":
    main()
